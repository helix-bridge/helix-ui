import {
  arbitrum,
  arbitrumSepolia,
  astarZkEVM,
  avalanche,
  base,
  baseSepolia,
  berachainTestnet,
  blast,
  bsc,
  crab,
  darwinia,
  ethereum,
  gnosis,
  linea,
  mantle,
  moonbeam,
  morphSepolia,
  optimism,
  polygon,
  polygonZkEvm,
  scroll,
  sepolia,
  taikoHekla,
  zkSync,
  zksyncSepolia,
} from "../chains";
import { type Chain, ChainID, type Network } from "../types";

export function getChains() {
  return [
    arbitrumSepolia,
    arbitrum,
    astarZkEVM,
    avalanche,
    baseSepolia,
    base,
    berachainTestnet,
    blast,
    bsc,
    crab,
    darwinia,
    ethereum,
    gnosis,
    linea,
    mantle,
    moonbeam,
    morphSepolia,
    optimism,
    polygonZkEvm,
    polygon,
    scroll,
    sepolia,
    taikoHekla,
    zksyncSepolia,
    zkSync,
  ];
}

const CHAIN_ID_2_CHAIN: Record<ChainID, Chain> = {
  [ChainID.ARBITRUM_SEPOLIA]: arbitrumSepolia,
  [ChainID.ARBITRUM]: arbitrum,
  [ChainID.ASTAR_ZKEVM]: astarZkEVM,
  [ChainID.AVALANCHE]: avalanche,
  [ChainID.BASE_SEPOLIA]: baseSepolia,
  [ChainID.BASE]: base,
  [ChainID.BERA]: berachainTestnet,
  [ChainID.BLAST]: blast,
  [ChainID.BSC]: bsc,
  [ChainID.CRAB]: crab,
  [ChainID.DARWINIA]: darwinia,
  [ChainID.ETHEREUM]: ethereum,
  [ChainID.GNOSIS]: gnosis,
  [ChainID.LINEA]: linea,
  [ChainID.MANTLE]: mantle,
  [ChainID.MOONBEAM]: moonbeam,
  [ChainID.MORPH]: morphSepolia,
  [ChainID.OPTIMISM]: optimism,
  [ChainID.POLYGON_ZKEVM]: polygonZkEvm,
  [ChainID.POLYGON]: polygon,
  [ChainID.SCROLL]: scroll,
  [ChainID.SEPOLIA]: sepolia,
  [ChainID.TAIKO_HEKLA]: taikoHekla,
  [ChainID.ZKSYNC_SEPOLIA]: zksyncSepolia,
  [ChainID.ZKSYNC]: zkSync,
};

const NETWORK_2_CHAIN: Record<Network, Chain> = {
  "arbitrum-sepolia": arbitrumSepolia,
  arbitrum: arbitrum,
  "astar-zkevm": astarZkEVM,
  avalanche: avalanche,
  "base-sepolia": baseSepolia,
  base: base,
  bera: berachainTestnet,
  blast: blast,
  bsc: bsc,
  "crab-dvm": crab,
  "darwinia-dvm": darwinia,
  ethereum: ethereum,
  gnosis: gnosis,
  linea: linea,
  mantle: mantle,
  moonbeam: moonbeam,
  morph: morphSepolia,
  op: optimism,
  "polygon-zkEvm": polygonZkEvm,
  polygon: polygon,
  scroll: scroll,
  sepolia: sepolia,
  "taiko-hekla": taikoHekla,
  "zksync-sepolia": zksyncSepolia,
  zksync: zkSync,
};

export function getChainByIdOrNetwork(chainIdOrNetwork: ChainID | Network | null | undefined) {
  return chainIdOrNetwork
    ? CHAIN_ID_2_CHAIN[chainIdOrNetwork as ChainID] ?? NETWORK_2_CHAIN[chainIdOrNetwork as Network]
    : undefined;
}
