import{B as l,e as y,s as w,i as p,I as b,f as g,h as k,j as O,k as E,H as h,m as L}from"./index-Bl6Lkf65.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="0e066989-40e9-41e3-b62d-6bb4bca5eb1b",e._sentryDebugIdIdentifier="sentry-dbid-0e066989-40e9-41e3-b62d-6bb4bca5eb1b")}catch{}})();class x extends l{constructor({callbackSelector:t,cause:r,data:o,extraData:c,sender:d,urls:a}){var i;super(r.shortMessage||"An error occurred while fetching for an offchain result.",{cause:r,metaMessages:[...r.metaMessages||[],(i=r.metaMessages)!=null&&i.length?"":[],"Offchain Gateway Call:",a&&["  Gateway URL(s):",...a.map(f=>`    ${y(f)}`)],`  Sender: ${d}`,`  Data: ${o}`,`  Callback selector: ${t}`,`  Extra data: ${c}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class M extends l{constructor({result:t,url:r}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${y(r)}`,`Response: ${w(t)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class D extends l{constructor({sender:t,to:r}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${r}`,`OffchainLookup sender address: ${t}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}function R(e,t){if(!p(e))throw new b({address:e});if(!p(t))throw new b({address:t});return e.toLowerCase()===t.toLowerCase()}const v="0x556f1830",$={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function A(e,{blockNumber:t,blockTag:r,data:o,to:c}){const{args:d}=g({data:o,abi:[$]}),[a,i,f,s,n]=d;try{if(!R(c,a))throw new D({sender:a,to:c});const u=await I({data:f,sender:a,urls:i}),{data:m}=await k(e,{blockNumber:t,blockTag:r,data:O([s,E([{type:"bytes"},{type:"bytes"}],[u,n])]),to:c});return m}catch(u){throw new x({callbackSelector:s,cause:u,data:o,extraData:n,sender:a,urls:i})}}async function I({data:e,sender:t,urls:r}){var c;let o=new Error("An unknown error occurred.");for(let d=0;d<r.length;d++){const a=r[d],i=a.includes("{data}")?"GET":"POST",f=i==="POST"?{data:e,sender:t}:void 0;try{const s=await fetch(a.replace("{sender}",t).replace("{data}",e),{body:JSON.stringify(f),method:i});let n;if((c=s.headers.get("Content-Type"))!=null&&c.startsWith("application/json")?n=(await s.json()).data:n=await s.text(),!s.ok){o=new h({body:f,details:n!=null&&n.error?w(n.error):s.statusText,headers:s.headers,status:s.status,url:a});continue}if(!L(n)){o=new M({result:n,url:a});continue}return n}catch(s){o=new h({body:f,details:s.message,url:a})}}throw o}export{I as ccipFetch,A as offchainLookup,$ as offchainLookupAbiItem,v as offchainLookupSignature};
//# sourceMappingURL=ccip-DjkOoLC9.js.map
